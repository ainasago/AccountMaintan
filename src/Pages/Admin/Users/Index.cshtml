@page
@model WebUI.Pages.Admin.Users.IndexModel
@{
    ViewData["Title"] = "用户管理";
}

<div class="container-fluid">
    <!-- 页面标题和操作按钮 -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <h1 class="h3 mb-0">
                    <i class="fas fa-users me-2"></i>用户管理
                </h1>
                <div>
                    <button class="btn btn-primary me-2" data-bs-toggle="modal" data-bs-target="#addUserModal">
                        <i class="fas fa-plus me-1"></i>添加用户
                    </button>
                    <a asp-page="/Admin/Settings" class="btn btn-outline-secondary">
                        <i class="fas fa-cog me-1"></i>系统设置
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- 用户列表 -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover" id="usersTable">
                            <thead>
                                <tr>
                                    <th>显示名称</th>
                                    <th>邮箱</th>
                                    <th>角色</th>
                                    <th>状态</th>
                                    <th>创建时间</th>
                                    <th>最后登录</th>
                                    <th>操作</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var user in Model.Users)
                                {
                                    <tr>
                                        <td>@user.DisplayName</td>
                                        <td>@user.Email</td>
                                        <td>
                                            @if (user.IsSuperAdmin)
                                            {
                                                <span class="badge bg-danger">超级管理员</span>
                                            }
                                            else if (user.IsAdmin)
                                            {
                                                <span class="badge bg-warning">管理员</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary">普通用户</span>
                                            }
                                        </td>
                                        <td>
                                            @if (user.IsEnabled)
                                            {
                                                <span class="badge bg-success">启用</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">禁用</span>
                                            }
                                        </td>
                                        <td>@user.CreatedAt.ToString("yyyy-MM-dd HH:mm")</td>
                                        <td>@(user.LastLoginAt?.ToString("yyyy-MM-dd HH:mm") ?? "从未登录")</td>
                                        <td>
                                            <div class="btn-group" role="group">
                                                @if (!user.IsSuperAdmin)
                                                {
                                                    <button class="btn btn-sm btn-outline-primary" onclick="editUser('@user.Id')">
                                                        <i class="fas fa-edit"></i>
                                                    </button>
                                                    <button class="btn btn-sm btn-outline-@(user.IsEnabled ? "warning" : "success")" 
                                                            onclick="toggleUserStatus('@user.Id', @user.IsEnabled.ToString().ToLower())">
                                                        <i class="fas fa-@(user.IsEnabled ? "ban" : "check")"></i>
                                                    </button>
                                                    <button class="btn btn-sm btn-outline-@(user.IsAdmin ? "secondary" : "info")" 
                                                            onclick="toggleAdminStatus('@user.Id', @user.IsAdmin.ToString().ToLower())">
                                                        <i class="fas fa-user-@(user.IsAdmin ? "minus" : "plus")"></i>
                                                    </button>
                                                    <button class="btn btn-sm btn-outline-danger" onclick="deleteUser('@user.Id')">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">超级管理员</span>
                                                }
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 添加用户模态框 -->
<div class="modal fade" id="addUserModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">添加用户</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="addUserForm">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="displayName" class="form-label">显示名称</label>
                        <input type="text" class="form-control" id="displayName" name="displayName" required>
                    </div>
                    <div class="mb-3">
                        <label for="email" class="form-label">邮箱</label>
                        <input type="email" class="form-control" id="email" name="email" required>
                    </div>
                    <div class="mb-3">
                        <label for="password" class="form-label">密码</label>
                        <input type="password" class="form-control" id="password" name="password" required>
                    </div>
                    <div class="mb-3">
                        <label for="confirmPassword" class="form-label">确认密码</label>
                        <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required>
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="isAdmin" name="isAdmin">
                            <label class="form-check-label" for="isAdmin">
                                设为管理员
                            </label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                    <button type="submit" class="btn btn-primary">添加</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.13.7/css/dataTables.bootstrap5.min.css">
    <script type="text/javascript" src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/1.13.7/js/dataTables.bootstrap5.min.js"></script>
    <script>
        // 全局变量
        let csrfToken = null;

        // 初始化CSRF令牌
        async function initializeCsrfToken() {
            try {
                console.log('正在获取CSRF令牌...');
                const response = await fetch('/api/admin/csrf-token', {
                    method: 'GET',
                    credentials: 'include'
                });
                
                console.log('CSRF令牌响应状态:', response.status);
                
                if (response.ok) {
                    const data = await response.json();
                    console.log('CSRF令牌响应数据:', data);
                    if (data.success) {
                        csrfToken = data.token;
                        console.log('CSRF令牌已获取:', csrfToken.substring(0, 8) + '...');
                    } else {
                        console.error('CSRF令牌获取失败:', data.message);
                    }
                } else {
                    console.error('CSRF令牌请求失败:', response.status, response.statusText);
                }
            } catch (error) {
                console.error('获取CSRF令牌失败:', error);
            }
        }

        // 获取CSRF令牌（如果不存在则重新获取）
        async function getCsrfToken() {
            if (!csrfToken) {
                await initializeCsrfToken();
            }
            return csrfToken;
        }

        $(document).ready(function() {
            // 初始化CSRF令牌
            initializeCsrfToken();

            $('#usersTable').DataTable({
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.7/i18n/zh.json'
                },
                pageLength: 25,
                order: [[4, 'desc']]
            });

            // 添加用户表单提交
            $('#addUserForm').on('submit', async function(e) {
                e.preventDefault();
                
                const formData = {
                    displayName: $('#displayName').val(),
                    email: $('#email').val(),
                    password: $('#password').val(),
                    confirmPassword: $('#confirmPassword').val(),
                    isAdmin: $('#isAdmin').is(':checked')
                };

                if (formData.password !== formData.confirmPassword) {
                    alert('密码和确认密码不匹配');
                    return;
                }

                try {
                    const token = await getCsrfToken();
                    const headers = {
                        'Content-Type': 'application/json'
                    };
                    
                    if (token) {
                        headers['X-CSRF-TOKEN'] = token;
                    }

                    $.ajax({
                        url: '/api/admin/users',
                        type: 'POST',
                        headers: headers,
                        contentType: 'application/json',
                        data: JSON.stringify(formData),
                        success: function(response) {
                            if (response.success) {
                                location.reload();
                            } else {
                                alert('添加用户失败: ' + response.message);
                            }
                        },
                        error: function(xhr) {
                            if (xhr.status === 403) {
                                alert('CSRF令牌验证失败，请刷新页面重试');
                            } else {
                                alert('添加用户时发生错误');
                            }
                        }
                    });
                } catch (error) {
                    console.error('添加用户失败:', error);
                    alert('添加用户时发生错误');
                }
            });
        });

        async function toggleUserStatus(userId, isEnabled) {
            const action = isEnabled ? '禁用' : '启用';
            if (confirm(`确定要${action}该用户吗？`)) {
                try {
                    const token = await getCsrfToken();
                    const headers = {};
                    
                    if (token) {
                        headers['X-CSRF-TOKEN'] = token;
                    }

                    $.ajax({
                        url: `/api/admin/users/${userId}/toggle-status`,
                        type: 'POST',
                        headers: headers,
                        success: function(response) {
                            if (response.success) {
                                location.reload();
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function(xhr) {
                            if (xhr.status === 403) {
                                alert('CSRF令牌验证失败，请刷新页面重试');
                            } else {
                                alert('操作失败');
                            }
                        }
                    });
                } catch (error) {
                    console.error('切换用户状态失败:', error);
                    alert('操作失败');
                }
            }
        }

        async function toggleAdminStatus(userId, isAdmin) {
            const action = isAdmin ? '撤销管理员权限' : '授予管理员权限';
            if (confirm(`确定要${action}吗？`)) {
                try {
                    const token = await getCsrfToken();
                    const headers = {};
                    
                    if (token) {
                        headers['X-CSRF-TOKEN'] = token;
                    }

                    $.ajax({
                        url: `/api/admin/users/${userId}/toggle-admin`,
                        type: 'POST',
                        headers: headers,
                        success: function(response) {
                            if (response.success) {
                                location.reload();
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function(xhr) {
                            if (xhr.status === 403) {
                                alert('CSRF令牌验证失败，请刷新页面重试');
                            } else {
                                alert('操作失败');
                            }
                        }
                    });
                } catch (error) {
                    console.error('切换管理员状态失败:', error);
                    alert('操作失败');
                }
            }
        }

        async function deleteUser(userId) {
            if (confirm('确定要删除该用户吗？此操作不可恢复！')) {
                try {
                    const token = await getCsrfToken();
                    const headers = {};
                    
                    if (token) {
                        headers['X-CSRF-TOKEN'] = token;
                    }

                    $.ajax({
                        url: `/api/admin/users/${userId}`,
                        type: 'DELETE',
                        headers: headers,
                        success: function(response) {
                            if (response.success) {
                                location.reload();
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function(xhr) {
                            if (xhr.status === 403) {
                                alert('CSRF令牌验证失败，请刷新页面重试');
                            } else {
                                alert('删除失败');
                            }
                        }
                    });
                } catch (error) {
                    console.error('删除用户失败:', error);
                    alert('删除失败');
                }
            }
        }
    </script>
}
